@using MadBidFetcher
@using MadBidFetcher.Model
@model MadBidFetcher.Model.Auction

@{
    ViewBag.Title = "Auction Display";
    var first = true;
}
<div class="auction">
    <div class="content">
        <h5>@Html.ActionLink(string.IsNullOrEmpty(Model.Title) ? Model.Id.ToString() : Model.Title, "Show", new { id = Model.Id })
            ( 
            <a href="@Url.Action("TogglePin", new { id = Model.Id })" title="@(Model.Pinned ? "Unpin" : "Pin")">@(Model.Pinned ? "U" : "P") </a>
            <a href="@Url.Action("Refresh", new { id = Model.Id })" title="Refresh">R </a>
            <a href="@Url.Action("Similar", new { id = Model.Id })" title="Similar">S </a>
            )
        </h5>
        <p class="prices"><a href="http://uk.madbid.com/show/auction/@Model.Id/hehe">@Model.Price.ToString("C") - @Model.RetailPrice.ToString("C") </a></p>
        @if (Model.Images != null)
        {
            <a href="@Url.Action("Show", new { id = Model.Id })">
                <img src="@(Model.Images[0].StartsWith("http") ? Model.Images[0] : Url.Action("Image", new { id = Model.Id, index = 0 }))"/>
            </a>
        }
        <p>
            @if (Model.Status == AuctionStatus.Closed)
            {
				@Model.Status
				<br/>
                @Html.DisplayFor(m=>m.Bids.Last().Player) @(Model.LastBidDate.HasValue ? Model.LastBidDate.Value.ToString(" dd MMM HH:mm") : "")
            }
            else
            {
                @Model.Status @(" ") @(Model.DateOpens.HasValue && Model.DateOpens > DateTime.Now ? Model.DateOpens.Value.ToString("dd MMM HH:mm") : string.Format("{0}-{1}", Model.StartTime, Model.EndTime))
            }
        </p>
        <table width="100%">
            <tr>
                <td>Active players</td>
                <td>
                    @foreach (var p in Model.ActivePlayers)
                    {
                        if (first)
                        {
                            first = false;
                        <span><b>@p.Value.Count</b></span>
                        }
                        else
                        {
                        <span>(@p.Value.Count)</span>					
                        }
                    }
                </td>
            </tr>
            <tr>
                <td>Bid time 
                </td>
                <td>
                    @Model.BidTimeOut s
                </td>
            </tr>
            <tr>
                <td>Credit cost 
                </td>
                <td>
                    @Model.CreditCost
                </td>
            </tr>
            <tr>
                <td>Total players 
                </td>
                <td>
                    @Model.Players.Count
                </td>
            </tr>
            @if (Model.CurrentUserAuction)
            {
                var userBids = Model.Players[SessionStore.CurrentUser].Bids;
                <tr>
                    <td>Credits spent</td>
                    <td>@userBids.Count</td>
                </tr>
                if (userBids.Count > 0 && userBids.Last().Time.HasValue)
                {
                <tr>
                    <td>Your Last bid</td>
                    <td>@userBids.Last().Time.Value.ToString("dd MMM HH:mm")</td>
                </tr>
                }
            }
        </table>
    </div>
</div>
